<?php
// $Id$

/**
 * @file
 * Imagemaps uses an image field and an image style to display the images.
 * Rendering the image in imagemaps modus will allow you to add pointers to
 * the image. A second text field will be used to store the coordinates.
 *
 * You will find configuration for the form and elements you want to hook
 * imagempas too as well as global configuration for the image_style, effects
 * and extra properties.
 *
 */

/**
 * Implements hook_menu().
 */
function imagemaps_menu() {

  $items['admin/config/media/imagemaps/settings'] = array(
    'title' => 'Imagemaps settings',
    'description' => 'Configuration options for imagemaps usage.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('imagemaps_settings_page'),
    'access arguments' => array('access administration pages'),
    'file' => 'imagemaps.admin.inc',
  );

  return $items;

}

/**
 * Implements hook_form_alter().
 */
function imagemaps_form_alter(& $form, & $form_state, $form_id) {

  $fields = variable_get('imagemaps', array());
  if (!empty($fields)) {
    foreach ($fields as $field => $imagemap) {
      $parts = explode("__", $field);
      if ($form_id == $parts[1]  . '_' . $parts[0] . '_form') {
        _imagemaps_form_alter($form, $form_state, $imagemap);
      }
      // TODO fix the other entities. I hope they are conventionally the same.
    }
  }

}

/**
 * Helper function to alter a form with given imagemap fields.
 */
function _imagemaps_form_alter(& $form, & $form_state, $imagemap) {

  module_load_include('inc', 'imagemaps', 'imagemaps.admin');

  // Add the imagemap behavior to this form.
  imagemaps_manage_display($form[$imagemap['field_image']], $form[$imagemap['field_data']], $imagemap['field_image_style']);

}

/**
 * Render and format the imagemap.
 */
function imagemaps_render($image_uri, $storage, $language = NULL) {

  if (!isset($language)) {
    $language = 'und';
  }

  $output = _imagemaps_render($image_uri, $storage, $language);

  // Attach the javascript and css files for the imagemap UI.
  drupal_add_js(drupal_get_path('module', 'imagemaps') . '/imagemaps.js');
  drupal_add_css(drupal_get_path('module', 'imagemaps') . '/imagemaps.css');

  return $output;

}

/**
 * Helper function to render the imagemap.
 */
function _imagemaps_render($image_uri, $storage, $image_style, $language = NULL, $admin = false) {

  $output = '';

  // Fetch the $image_style image style, using its width and height
  // for wrap the image rendered by image style.
  $properties = image_style_load($image_style);
  foreach ($properties['effects'] as $effect) {
    $width = $effect['data']['width'];
    $height = $effect['data']['height'];
    break;
  }
  $variables = array('path' => $image_uri, 'style_name' => $image_style);
  $output .= '<div id="media-imagemap" style="width: ' . $width . 'px; height: ' . $height . 'px">';
  $output .= theme('image_style', $variables);

  // List the coordinates.
  if (count($storage) > 0) {
    foreach (explode(";", $storage) as $marker) {
      parse_str($marker);
      // available: x, y, id, description.
      $output .= '<a href="#" rel="' . $x . '-' . $y . '" title="' . $description . '" alt="' . $description . '" class="bullet"></a>';
    }
  }
  $output .= '</div>';

  if ($admin) {
   $output .= '<div id="imagemap-edit" style="width: ' . (900 - $width) . 'px; height: ' . $height . 'px"></div>';
  }

  return $output;
}